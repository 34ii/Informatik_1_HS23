WARNING! THIS IS THE OFFICIAL SOLUTION FROM LAST YEAR!
------------------------------------------------------



#!/usr/bin/env python3

def is_valid_IPv4_octet(octet):
    """Returns True if octet represents a valid IPv4 octet, False otherwise"""
    return 0 <= int(octet) <= 255

def is_valid_IPv4(ip):
    """Returns True if ip represents a valid IPv4 address, False otherwise"""
    for octet in ip.split("."):
        if not is_valid_IPv4_octet(octet):
            return False
    return True

def is_valid_IPv6_hextet(hextet):
    """Returns True if hextet represents a valid IPv6 hextet, False otherwise"""
    return 0 <= int(hextet, 16) < int("ffff", 16)

def is_valid_IPv6(ip):
    """Returns True if ip represents a valid IPv6 address, False otherwise"""
    if ip.count(":") == 7:
        for hextet in ip.split(":"):
            if not is_valid_IPv6_hextet(hextet):
                return False
            return True
    else:
        return False

def is_valid_IP(ip):
    """Returns True if ip represents a valid IPv4 or IPv6 address False otherwise"""
    if (":") in ip and ip.count(":") == 7:
        return is_valid_IPv6(ip)
    elif "." in ip and ip.count(".") == 3:
        return is_valid_IPv4(ip)
    else:
        return False

# You should look at task/test.py and extend the test suite we provided!

