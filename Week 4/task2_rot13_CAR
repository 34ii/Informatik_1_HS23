#!/usr/bin/env python3
# CAR
# perform a ROTn encoding
def rot_n(plain_text, shift_by):
    #already preprocess the shift
    change = shift_by % 26
    res = ""

    for i in range(0, len(plain_text)):
        curr = plain_text[i]
        temp = ""
        numerical_value = ord(curr)
        # first check if it is a letter
        if curr.isalpha():
            # check if it is an upper letter
            if curr.isupper():
                temp += chr((numerical_value % 65 + change) % 26 + 65)
            # check if it is lower letter
            elif curr.islower():
                temp += chr((numerical_value % 97 + change) % 26 + 97)
        else:
            temp += curr
        res += temp    

    return res

"""
checking if it is an upper or lower letter is important since between those two ranges
are characters we do not care about. Thus rule them out, we need to exclude those ranges

the math behind lines 16 and 19:
- determine which character we start with (%65 or %97 -> starting point of corresponnding intercal)
- add the necessary change
- reduce again to rule out going out of bounds
- add to the starting point of each interval

not the prettiest  version but it works
"""

#interval: 65 - 90; 97 - 122

print(rot_n("aA", -10))

