#!/usr/bin/env python3

import re


# The signatures of this class and its public methods are required for the automated grading to work. 
# You must not change the names or the list of parameters. 
# You may introduce private/protected utility methods though.
class ProfanityFilter:

    def __init__(self, keywords, template):
        self.keywords= sorted(keywords, key=len, reverse=True)
        self.template= template

    def _clean_word(self, word):
        repeat_times = -(-len(word)// len(self.template))
        return(self.template*repeat_times)[:len(word)]


    def filter(self, msg):
        for keywords in self.keywords:
            pattern= re.compile(re.escape(keywords), re.IGNORECASE)
            msg = pattern.sub(lambda match: self._clean_word(match.group()), msg)
        return msg


# You can play around with your implementation in the body of the following 'if'.
# The contained statements will be ignored while evaluating your solution.
if __name__ == '__main__':
    f = ProfanityFilter(["duck", "shot", "batch", "mastard"], "?#$")
    offensive_msg = "abc defghi mastard jklmno"
    clean_msg = f.filter(offensive_msg)
    print(clean_msg)  # abc defghi ?#$?#$? jklmno
